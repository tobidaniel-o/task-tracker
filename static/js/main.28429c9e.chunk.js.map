{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","pointer","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","console","log","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28429c9e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className=\"btn\"\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n};\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\n\nconst Header = ({ title , onAdd, showAdd}) => {\n\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nconst headingStyle = {\n  color: \"red\",\n  backgroundColor: \"black\",\n};\n\nexport default Header;\n","import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div\n      className={`task ${task.reminder ? 'reminder' : ''}`}\n      onDoubleClick={() => {\n        onToggle(task.id);\n      }}\n    >\n      <h3>\n        {task.text}{\" \"}\n        <FaTimes\n          style={{ color: \"red\", pointer: \"pointer\" }}\n          onClick={() => {\n            onDelete(task.id);\n          }}\n        />\n      </h3>\n      <p>{task.day} </p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from \"./Task\";\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n  return (\n    <>\n      {tasks.map((task) => {\n        return <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>;\n      })}\n    </>\n  );\n};\n\nexport default Tasks;\n","import { useState } from \"react\";\n\nexport default function AddTask({onAdd}) {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if(!text) {\n      alert('Please add a task')\n      return \n    }\n\n    onAdd({text, day, reminder})\n\n    setText('')\n    setDay('')\n    setReminder(false)\n  }\n\n  return (\n    <form className=\"add-form\" onSubmit={onSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Task\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-control\">\n        <label htmlFor=\"\">Day & Time</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add Day & Time\"\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-control form-control-check\">\n        <label htmlFor=\"\">Set Reminder</label>\n        <input\n          type=\"checkbox\"\n          checked={reminder}\n          value={reminder}\n          onChange={(e) => setReminder(e.currentTarget.checked)}\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\n    </form>\n  );\n}\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Doctors Appointment\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"Meeting at School\",\n      day: \"Feb 6th at 1:30pm\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"Food Shopping\",\n      day: \"Feb 5th at 2:30pm\",\n      reminder: false,\n    },\n  ]);\n\n  // Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...tasks, newTask]);\n    console.log(id);\n  };\n\n  //  Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}